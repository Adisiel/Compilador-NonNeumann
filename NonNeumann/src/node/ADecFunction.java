/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ADecFunction extends PDecFunction
{
    private TEntry _entry_;
    private TLeftParentheses _leftParentheses_;
    private TFunction _function_;
    private PType _type_;
    private TIdentifier _identifier_;
    private PFunctionParamAuxiliar _functionParamAuxiliar_;
    private TColon _colon_;
    private PFunctionExpressionAuxiliar _functionExpressionAuxiliar_;
    private TRightParentheses _rightParentheses_;

    public ADecFunction()
    {
        // Constructor
    }

    public ADecFunction(
        @SuppressWarnings("hiding") TEntry _entry_,
        @SuppressWarnings("hiding") TLeftParentheses _leftParentheses_,
        @SuppressWarnings("hiding") TFunction _function_,
        @SuppressWarnings("hiding") PType _type_,
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") PFunctionParamAuxiliar _functionParamAuxiliar_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PFunctionExpressionAuxiliar _functionExpressionAuxiliar_,
        @SuppressWarnings("hiding") TRightParentheses _rightParentheses_)
    {
        // Constructor
        setEntry(_entry_);

        setLeftParentheses(_leftParentheses_);

        setFunction(_function_);

        setType(_type_);

        setIdentifier(_identifier_);

        setFunctionParamAuxiliar(_functionParamAuxiliar_);

        setColon(_colon_);

        setFunctionExpressionAuxiliar(_functionExpressionAuxiliar_);

        setRightParentheses(_rightParentheses_);

    }

    @Override
    public Object clone()
    {
        return new ADecFunction(
            cloneNode(this._entry_),
            cloneNode(this._leftParentheses_),
            cloneNode(this._function_),
            cloneNode(this._type_),
            cloneNode(this._identifier_),
            cloneNode(this._functionParamAuxiliar_),
            cloneNode(this._colon_),
            cloneNode(this._functionExpressionAuxiliar_),
            cloneNode(this._rightParentheses_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecFunction(this);
    }

    public TEntry getEntry()
    {
        return this._entry_;
    }

    public void setEntry(TEntry node)
    {
        if(this._entry_ != null)
        {
            this._entry_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._entry_ = node;
    }

    public TLeftParentheses getLeftParentheses()
    {
        return this._leftParentheses_;
    }

    public void setLeftParentheses(TLeftParentheses node)
    {
        if(this._leftParentheses_ != null)
        {
            this._leftParentheses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._leftParentheses_ = node;
    }

    public TFunction getFunction()
    {
        return this._function_;
    }

    public void setFunction(TFunction node)
    {
        if(this._function_ != null)
        {
            this._function_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._function_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public PFunctionParamAuxiliar getFunctionParamAuxiliar()
    {
        return this._functionParamAuxiliar_;
    }

    public void setFunctionParamAuxiliar(PFunctionParamAuxiliar node)
    {
        if(this._functionParamAuxiliar_ != null)
        {
            this._functionParamAuxiliar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._functionParamAuxiliar_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PFunctionExpressionAuxiliar getFunctionExpressionAuxiliar()
    {
        return this._functionExpressionAuxiliar_;
    }

    public void setFunctionExpressionAuxiliar(PFunctionExpressionAuxiliar node)
    {
        if(this._functionExpressionAuxiliar_ != null)
        {
            this._functionExpressionAuxiliar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._functionExpressionAuxiliar_ = node;
    }

    public TRightParentheses getRightParentheses()
    {
        return this._rightParentheses_;
    }

    public void setRightParentheses(TRightParentheses node)
    {
        if(this._rightParentheses_ != null)
        {
            this._rightParentheses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rightParentheses_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._entry_)
            + toString(this._leftParentheses_)
            + toString(this._function_)
            + toString(this._type_)
            + toString(this._identifier_)
            + toString(this._functionParamAuxiliar_)
            + toString(this._colon_)
            + toString(this._functionExpressionAuxiliar_)
            + toString(this._rightParentheses_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._entry_ == child)
        {
            this._entry_ = null;
            return;
        }

        if(this._leftParentheses_ == child)
        {
            this._leftParentheses_ = null;
            return;
        }

        if(this._function_ == child)
        {
            this._function_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._functionParamAuxiliar_ == child)
        {
            this._functionParamAuxiliar_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._functionExpressionAuxiliar_ == child)
        {
            this._functionExpressionAuxiliar_ = null;
            return;
        }

        if(this._rightParentheses_ == child)
        {
            this._rightParentheses_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._entry_ == oldChild)
        {
            setEntry((TEntry) newChild);
            return;
        }

        if(this._leftParentheses_ == oldChild)
        {
            setLeftParentheses((TLeftParentheses) newChild);
            return;
        }

        if(this._function_ == oldChild)
        {
            setFunction((TFunction) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._functionParamAuxiliar_ == oldChild)
        {
            setFunctionParamAuxiliar((PFunctionParamAuxiliar) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._functionExpressionAuxiliar_ == oldChild)
        {
            setFunctionExpressionAuxiliar((PFunctionExpressionAuxiliar) newChild);
            return;
        }

        if(this._rightParentheses_ == oldChild)
        {
            setRightParentheses((TRightParentheses) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
